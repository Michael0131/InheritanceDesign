<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36" version="28.2.3">
  <diagram name="Page-1" id="Q-_XIeChKCmGBlx5ck_n">
    <mxGraphModel dx="1188" dy="556" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1169" pageHeight="1654" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="ScVGmL8pBqTF18JCCDvz-1" value="chess" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="70" y="100" width="330" height="224" as="geometry" />
        </mxCell>
        <mxCell id="ScVGmL8pBqTF18JCCDvz-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="ScVGmL8pBqTF18JCCDvz-1">
          <mxGeometry y="26" width="330" height="8" as="geometry" />
        </mxCell>
        <mxCell id="ScVGmL8pBqTF18JCCDvz-4" value="+ isNotWhite(board: char*, col: int, row: int) : bool&lt;div&gt;&lt;div&gt;+ isWhite(board: char*, col: int, row: int) : bool&lt;/div&gt;&lt;div&gt;+ isNotBlack(board: char*, col: int, row: int) : bool&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ isBlack(board: char*, col: int, row: int) : bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ getPossibleMoves(board: char*, location: int) : set&amp;lt;int&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ draw(board: char*, ui: Interface&amp;amp;, possible: set&amp;lt;int&amp;gt;) : void&lt;/div&gt;&lt;div&gt;+ move(board: char*, posFrom: int, posTo: int) : bool&lt;/div&gt;&lt;div&gt;+ callBack(pUI: Interface*, p: void*) : void&lt;/div&gt;&lt;div&gt;+ parse(textMove: string, posFrom: int&amp;amp;, posTo: int&amp;amp;) : void&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ readFile(fileName: char*, board: char*) : void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ main(...) : int&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="ScVGmL8pBqTF18JCCDvz-1">
          <mxGeometry y="34" width="330" height="190" as="geometry" />
        </mxCell>
        <mxCell id="ScVGmL8pBqTF18JCCDvz-9" value="uiDraw" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="450" y="110" width="390" height="340" as="geometry" />
        </mxCell>
        <mxCell id="ScVGmL8pBqTF18JCCDvz-10" value="# x : int&lt;div&gt;# y : int&lt;/div&gt;&lt;div&gt;&lt;div&gt;- drawPiece(x: int, y: int, black: bool,&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;rectangle[]: Rect, num: int) : void&lt;br&gt;-&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;drawText(x: int, y: int, text: char*) : void&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;- Rect&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="ScVGmL8pBqTF18JCCDvz-9">
          <mxGeometry y="26" width="390" height="84" as="geometry" />
        </mxCell>
        <mxCell id="ScVGmL8pBqTF18JCCDvz-11" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="ScVGmL8pBqTF18JCCDvz-9">
          <mxGeometry y="110" width="390" height="2" as="geometry" />
        </mxCell>
        <mxCell id="ScVGmL8pBqTF18JCCDvz-12" value="&lt;div&gt;+ ogstream()&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ ogstream(position: int)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ ~ogstream()&lt;/div&gt;&lt;div&gt;+ flush() : void&lt;/div&gt;&lt;div&gt;+ setPosition(x: int, y: int) : void&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ drawKing(position: int, black: bool) : void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ drawQueen(position: int, black: bool) : void&lt;/div&gt;&lt;div&gt;+ drawRook(position: int, black: bool) : void&lt;/div&gt;&lt;div&gt;+ drawPawn(position: int, black: bool) : void&lt;/div&gt;&lt;div&gt;+ drawBishop(position: int, black: bool) : void&lt;/div&gt;&lt;div&gt;+ drawKnight(position: int, black: bool) : void&lt;/div&gt;&lt;div&gt;+ drawBoard() : void&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ drawSelected(position: int) : void&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ drawHover(position: int) : void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ drawPossible(position: int) : void&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="ScVGmL8pBqTF18JCCDvz-9">
          <mxGeometry y="112" width="390" height="228" as="geometry" />
        </mxCell>
        <mxCell id="ScVGmL8pBqTF18JCCDvz-13" value="uiInteract" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="670" y="741" width="260" height="490" as="geometry" />
        </mxCell>
        <mxCell id="ScVGmL8pBqTF18JCCDvz-14" value="- initialize(title: const char*) : void&lt;div&gt;&lt;div&gt;- &lt;u&gt;initialized&amp;nbsp;&lt;/u&gt;: bool&lt;/div&gt;&lt;div&gt;- &lt;u&gt;timePeriod&amp;nbsp;&lt;/u&gt;: double&lt;/div&gt;&lt;div&gt;- &lt;u&gt;nextTick&lt;/u&gt;&amp;nbsp;: unsigned long&lt;/div&gt;&lt;div&gt;- &lt;u&gt;posHover&amp;nbsp;&lt;/u&gt;: int&lt;/div&gt;&lt;div&gt;- &lt;u&gt;posSelect&lt;/u&gt;&amp;nbsp;: int&lt;/div&gt;&lt;div&gt;- &lt;u&gt;posSelectPrev&lt;/u&gt; : int&lt;/div&gt;&lt;div&gt;- &lt;u&gt;widthScreen&lt;/u&gt;&amp;nbsp; &amp;nbsp;: int&lt;/div&gt;&lt;div&gt;- &lt;u&gt;heightScreen&lt;/u&gt;&amp;nbsp; : int&lt;/div&gt;&lt;div&gt;- &lt;u&gt;p&lt;/u&gt;&amp;nbsp; : void*&lt;/div&gt;&lt;div&gt;- &lt;u&gt;callBack&lt;/u&gt;&amp;nbsp; : (*)(Interface*, void*)&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="ScVGmL8pBqTF18JCCDvz-13">
          <mxGeometry y="26" width="260" height="174" as="geometry" />
        </mxCell>
        <mxCell id="ScVGmL8pBqTF18JCCDvz-15" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="ScVGmL8pBqTF18JCCDvz-13">
          <mxGeometry y="200" width="260" height="8" as="geometry" />
        </mxCell>
        <mxCell id="ScVGmL8pBqTF18JCCDvz-16" value="&lt;div&gt;+ Interface()&lt;/div&gt;&lt;div&gt;+ Interface(title: const char*)&lt;/div&gt;&lt;div&gt;+ run(cb: (*)(Interface*, void*), p: void*) : void&lt;/div&gt;&lt;div&gt;+ isTimeToDraw() : bool&lt;/div&gt;&lt;div&gt;+ setNextDrawTime() : void&lt;/div&gt;&lt;div&gt;+ getNextTick() : unsigned long&lt;/div&gt;&lt;div&gt;+ setFramesPerSecond(value: double) : void&lt;/div&gt;&lt;div&gt;+ frameRate() : double&lt;/div&gt;&lt;div&gt;+ getSquareWidth() : double&lt;/div&gt;&lt;div&gt;+ getSquareHeight() : double&lt;/div&gt;&lt;div&gt;+ setScreen(width: int, height: int) : void&lt;/div&gt;&lt;div&gt;+ positionFromXY(x: int, y: int) : int&lt;/div&gt;&lt;div&gt;+ getSelectPosition() : int&lt;/div&gt;&lt;div&gt;+ getHoverPosition() : int&lt;/div&gt;&lt;div&gt;+ getPreviousPosition() : int&lt;/div&gt;&lt;div&gt;+ setSelectPosition(pos: int) : void&lt;/div&gt;&lt;div&gt;+ clearSelectPosition() : void&lt;/div&gt;&lt;div&gt;+ clearPreviousPosition() : void&lt;/div&gt;&lt;div&gt;+ setHoverPosition(pos: int) : void&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="ScVGmL8pBqTF18JCCDvz-13">
          <mxGeometry y="208" width="260" height="282" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
